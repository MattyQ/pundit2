/**
 * BUTTONS
 *
 * Style for custom buttons
 */

/* ------------------------------------ *\
   #PUNDIT-BUTTON
\* ------------------------------------ */

/* Default button */
.pnd-btn {
    display: inline-block;
    box-sizing: border-box;

    width: auto; /* for css conflicts */
    min-width: auto;
    height: 32px;

    margin: 0;
    padding: 0 8px;

    background: @color-button-bg;
    background-image: none;
    border: @button-border-width solid @color-button-border;
    border-radius: 3px;
    outline: 0;

    color: @color-button-text;
    font-family: @font;
    font-size: 13px;
    font-weight: @button-font-weight;
    text-align: center;
    vertical-align: middle;
    white-space: nowrap;
    box-shadow: none;
    cursor: pointer;

    /* Hover state */
    &:hover,
    &:focus,
    &.focus {
        color: @color-button-text-hover;
        border-color: @color-button-border-hover;
        // background: darken(@color-button-bg, 5); // TODO remove if not necessary
        outline: 0;
        box-shadow: none;
    }

    /* Active state */
    // TODO

    /* Disabled state */
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: @color-button-text-disabled;
        border-color: @color-button-border-disabled;
        cursor: @cursor-disabled;
        pointer-events: none; // Future-proof disabling of clicks
    }

    i {
        color: inherit;
    }
}

/* Large buttons */
.pnd-btn-large {
    height: 32px;
    padding: 0 12px;
    font-size: 13px;
}

/* Smaller buttons */
.pnd-btn-small {
    height: 26px;
    font-size: 12px;
}

/* X-small buttons */
.pnd-btn-xsmall {
    height: 22px;
    font-size: 11px;
    background-image: none;
    text-shadow: none;
    line-height: normal;

    .pnd-icon {
        font-size: 14px;
    }
}

/* For disabled buttons */
button.disabled,
button[disabled] {
    opacity: 1;
}


/* ------------------------------------ *\
   #CALL-TO-ACTION-BUTTON
\* ------------------------------------ */

.pnd-btn-calltoaction {
    color: @color-button-cta-text;
    background-color: @color-button-cta-bg;
    border: 0;
    .text-dark-emboss();

    /* Hover state */
    &:hover,
    &:focus,
    &.focus {
        color: @color-button-cta-text;
        background-color: @color-button-cta-bg-hover;
        border: 0;
    }

    /* Active state */
    // TODO

    /* Disabled state */
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: @color-button-cta-text-disabled;
        background-color: @color-button-cta-bg-disabled;
        border: 0;
        // color: fade(@color-button-cta-text, 60%) !important; // for ovewritings on .disabled class // TODO remove if not necessary
        text-shadow: none;
    }
}


/* ------------------------------------ *\
   #LIGHT BUTTON
\* ------------------------------------ */

.pnd-btn-transparent {
    padding: 0 0;
    color: @color-button-light-text;
    background-color: transparent;
    background-image: none;
    border: 0;
    text-shadow: none;

    /* Hover state */
    &:hover,
    &:focus,
    &.focus {
        color: @color-button-light-text-hover;
        background-color: transparent;
        background-image: none;
        border: 0;
    }

    /* Active state */
    // TODO

    /* Disabled state */
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: @color-button-light-text-disabled;
        background-color: transparent;
        background-image: none;
        border: 0;
        // color: fade(@color-text, 60%) !important; // for ovewritings on .disabled class // TODO remove if not necessary
    }
}


/* ------------------------------------ *\
   #DARK BUTTON
\* ------------------------------------ */

.pnd-btn-dark {
    color: @color-button-cta-text; // TODO Create variable
    background-color: rgba(0,0,0,.8); // TODO Create variable
    border: 0;
    .text-dark-emboss();

    /* Hover state */
    &:hover,
    &:focus,
    &.focus {
        color: @color-button-cta-text;
        background-color: rgba(0,0,0,.95); // TODO Create variable
        border: 0;
    }

    /* Active state */
    // TODO

    /* Disabled state */
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: @color-button-cta-text-disabled; // TODO Create variable
        background-color: rgba(0,0,0,.6); // TODO Create variable
        border: 0;
        text-shadow: none;
    }
}


/* ------------------------------------ *\
   #SEMANTIC-BUTTONS
\* ------------------------------------ */
/* Buttons with custom colors for Subject, Object, Predicate */

/* Subject button */
.pnd-btn-subject {
    color: @color-button-cta-text;
    background-color: @color-subject;
    border: 0;

    /* Hover state */
    &:hover,
    &:focus,
    &.focus {
        color: @color-button-cta-text;
        background-color: darken(@color-subject, 5); // TODO To be introduced as variable?
    }

    /* Active state */
    // TODO

    /* Disabled state */
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: fade(@color-button-cta-text, 60%) !important; // for ovewritings on .disabled class // TODO To be introduced as variable?
        background-color: lighten(@color-subject, 20);
        text-shadow: none;
    }
}

/* Predicate button */
.pnd-btn-predicate {
    color: @color-button-cta-text;
    background-color: @color-predicate;
    border: 0;

    /* Hover state */
    &:hover,
    &:focus,
    &.focus {
        color: @color-button-cta-text;
        background-color: darken(@color-predicate, 5); // TODO To be introduced as variable?
    }

    /* Active state */
    // TODO

    /* Disabled state */
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: fade(@color-button-cta-text, 60%) !important; // for ovewritings on .disabled class // TODO To be introduced as variable?
        background-color: lighten(@color-predicate, 20);
        text-shadow: none;
    }
}

/* Object button */
.pnd-btn-object {
    color: @color-button-cta-text;
    background-color: @color-object;
    border: 0;

    /* Hover state */
    &:hover,
    &:focus,
    &.focus {
        color: @color-button-cta-text;
        background-color: darken(@color-object, 5); // TODO To be introduced as variable?
    }

    /* Active state */
    // TODO

    /* Disabled state */
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        color: fade(@color-button-cta-text, 60%) !important; // for ovewritings on .disabled class // TODO To be introduced as variable?
        background-color: lighten(@color-object, 20);
        text-shadow: none;
    }
}


/* ------------------------------------ *\
   #AVAILABLE-WIDTH-FILL-BUTTONS
\* ------------------------------------ */

/*
The buttons with the class "pnd-btn-fill-width" always
try to fill the available with.
This class works for one, two or three buttons but
can be extended to support more buttons
*/

/* One button */
.pnd-btn-fill-width:first-child:nth-last-child(1) {
    width: 100%;
}

/* Two buttons */
.pnd-btn-fill-width:first-child:nth-last-child(2),
.pnd-btn-fill-width:first-child:nth-last-child(2) ~ .pnd-btn-fill-width {
    width: 50%;
}

/* Three buttons  */
.pnd-btn-fill-width:first-child:nth-last-child(3),
.pnd-btn-fill-width:first-child:nth-last-child(3) ~ .pnd-btn-fill-width {
    width: 33.3333%;
}