// - REMOVE THE UNIT FROM A VALUE. BASED ON ZURB FOUNDATION
@function remove-unit($value) {
  @return $value / ($value * 0 + 1);
}

// - TRANSFORM AN ARRAY OF PX VALUES (with or without px value) in rem unit - //

// - EXAMPLES
//
//  width: rem-calc(16 8 16 8)
//  will return
//  width: 1rem 0.5rem 1rem 0.5rem
//
//  width: rem-calc(8)
//  will return
//  width: 1rem

$rem-base: 16px !default;
$design-base: $rem-base !default;

@function rem-calc($values, $base-value: $design-base) {
  @if length($values) == 1 {
    @return remove-unit($values) / remove-unit($base-value) * 1rem;
  } @else {
    // empty array that we will return
    $rem-values: ();

    @each $value in $values {
      $rem-values: append($rem-values, remove-unit($value) / remove-unit($base-value) * 1rem);
    }

    @return $rem-values;
  }
}

// - TRANSFORM AN ARRAY OF PX VALUES (with or without px value) in em unit - //

@function em-calc($values, $base-value: $design-base) {
  @if length($values) == 1 {
    @return remove-unit($values) / remove-unit($base-value) * 1em;
  } @else {
    // empty array that we will return
    $em-values: ();

    @each $value in $values {
      $em-values: append($em-values, remove-unit($value) / remove-unit($base-value) * 1em);
    }

    @return $em-values;
  }
}

// - TRANSFORM AN ARRAY OF EM VALUES (with or without em value) in px unit - //
@function px-calc($values, $base-value: $design-base) {
  @if length($values) == 1 {
    @return remove-unit($values) * remove-unit($base-value) * 1px;
  } @else {
    // empty array that we will return
    $px-values: ();

    @each $value in $values {
      $px-values: append($px-values, remove-unit($value) * remove-unit($base-value) * 1px);
    }

    @return $px-values;
  }
}
